name: Destroy
on:
  workflow_dispatch:

jobs:
  init-plan-and-destroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform    
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.1
          
      - name: Terraform version
        run: terraform version

      # Initialize with remote state
      - name: Terraform Init
        run: |
          terraform init -backend-config="resource_group_name=${{ secrets.TF_RG_NAME }}" \
          -backend-config="storage_account_name=${{ secrets.TF_SG_ACCT_NAME }}" \
          -backend-config="container_name=${{ secrets.TF_SG_CONTAINER_NAME }}" \
          -backend-config="key=${{ secrets.TF_STATE_KEY }}" 
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      # Destroy
      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main'
        run: terraform destroy -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
